
@{
    ViewBag.Title = "BoardView";
}

@*
    view 설계 계획
    1.좌측 상단 게시물 갯수 표시(왼쪽 정렬) : 갯수 강조 표시
    2.우측 상단 검색 기능 추가(오른쪽 정렬)
        2-1 드롭다운 : 검색 기준 (제목, 본문)
        2-2 입력창 : 검색 내용 입력창
        2-3 버튼 : 검색 버튼(내용 있을 때만 검색)
            2-3-1 검색 내용 없을 때 내용 입력 알림 띄우기
            2-3-2 검색 결과 없을 때 검색 결과 없음 알림 띄우기
    3.중앙 게시판 리스트
        3-1 내용 표시 테이블 : 한번에 10개 까지 표시, 최근 게시물이 상단으로 오도록 내용 표시
            3-1-1 thead : 번호, 제목, 작성일
            3-1-2 tbody
                1 번호 : 가장 오래된 게시물부터 오름차순으로 번호 매겨짐
                2 제목 : 왼쪽 정렬로 제목 표시, 오른쪽 정렬로 수정, 삭제 버튼
                    1 수정 버튼 클릭 시
                        1 수정 입력창 : 기존 제목과 본문 내용 표시
                        2 저장 버튼 누르면 업데이트 후 창 닫기, 취소 버튼 누르면 창 닫기
                    2 삭제 버튼 클릭 시
                        알림 창으로 삭제 동의 후 삭제
                    3 제목 클릭 시
                        내용 알림으로 표시
                3 작성일 : yy-MM-dd 형식으로 표시
        3-2 페이지 이동 버튼(가운데 정렬) : 최근 게시물이 첫페이지에 오도록 표시
            3-2-1 빠른이동
                1 좌측 버튼 클릭 시 첫 페이지로 이동
                2 우측 버튼 클릭 시 마지막 페이지로 이동
            3-2-2 전후이동
                1 좌측 버튼 클릭 시 이전 페이지로 이동
                2 우측 버튼 클릭 시 다음 페이지로 이동
            3-2-3 숫자이동 : 5개씩 표시
                1 현재 페이지
                    1 강조 표시
                    2 현재 페이지가 가운데 오도록 표시(예외 : 앞 페이지와 뒷 페이지가 2개 미만일 때는 최대한 가운데 오도록만 표시)
                2 다른 숫자 페이지
                    1 해당 페이지로 이동
        3-3 등록 버튼(오른쪽 정렬)
            3-3-1 등록 버튼 클릭 시
                1 등록 입력창 : 제목과 본문 내용 비어있는 입력창 표시
                2 저장 버튼 누르면 등록 후 창 닫기, 취소 버튼 누르면 창 닫기
*@
<style>
    /*상단*/
    /*드롭다운*/
    .dropdown {
        position: relative;
        display: inline-block;
    }

    .dropdown-content {
        display: none;
        position: absolute;
        z-index: 1; /*다른 요소들보다 앞에 배치*/
    }

    .dropdown-content div {
            display: block;
     }

    .dropdown:hover .dropdown-content {
        display: block;
    }
    /*중앙*/
    /*하단*/
</style>


<script>
    $(function () {
        init();
    });

    var init = function () {
        //$("pre").on("click", function () {
        //    o.toast.info("소스 코드를 클릭하셨군요!");
        //});
        //
        //검색 버튼
        //등록 버튼

        board.getlist(1);
    }


    var title = "";
    var total = 200;
    var nowpage = 1;
    var setpage = 10;
    var pagesize = 10;

    //클래스 object = JavaScript Object Nation
    //list 
    //View -> <div></div> 다른 페이지 이동
    //CREATE -> 페이지 따로 생성
    //DELETE -> ISUSE -> N
    //EDIT 마지막


    //다음 시간 과제
    //페이징  
    //  [ << ] 제일 처음
    //  [ < ] 10개 전
    //  [ 이전페이지 ] -1
    //  [ 다음페이지 ] + 1
    //  [ > ] 10개 이후
    //  [ >> ] 제일 마지막

    //검색


    //다다음 시간 과제
    //검색
    //오더

    function getlist() {

    }

    function setlist() {

    }

    var board = {
        title: "제목",
        total: 200,
        nowpage: 1,
        setpage: 10,
        pagesize: 10,
        searchvalue: "",
        searchcolum: "",
        init: function () {
            this.nowpage = 1

            this.getlist(1);
        },
        getlist: function (page) {
            var params = {
                offset: 0,
                next: 2,
                searchvalue: this.searchvalue,
                searchcolum: this.searchcolum
            }

            //jquer function 호출 했을경우에 this는 바뀐다.
            //var lll = [1, 2, 3, 4];
            //$.each(lll, function (index, item) {
            //    debugger;
            //});

            var that = this;

            // ajax 통신
            // ajax 를 실행하고 나서 동기화를 하지않으면, 쓰레드가 분기된다.
            $.ajax({
                type: "POST",            // HTTP method type(GET, POST) 형식이다.
                url: "/Board/GetList",      // 컨트롤러에서 대기중인 URL 주소이다.
                data: params,            // Json 형식의 데이터이다.
                success: function (res) { // 비동기통신의 성공일경우 success콜백으로 들어옵니다. 'res'는 응답받은 데이터이다.
                    // 응답코드 > 0000
                    console.log("success");
                    var list = JSON.parse(res);
                    console.log(res);
                    console.log("bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb");


                    //this가 에러가 남
                    //this.setlist(res);

                    //1개만 실행시킬경우
                    board.setlist(res);
                    //2개 이상실행시킬경우
                    //that.setlist(res);
                    //that.setpage(res);
                    //that.nowpage = page;
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) { // 비동기 통신이 실패할경우 error 콜백으로 들어옵니다.
                    alert("통신 실패.")
                }
            });


            console.log("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa");
        },
        setlist: function (obj) {
            $("#board tbody").html("");
            $.each(obj, function (idx, item) {
                //string format 형식으로 바꾸기, 자주 사용하는 기능들 미리 만들어 두고 불러서 쓰기(common script  comm.js)
                $("#board tbody").append('<tr onclick=""><td>_</td><td>' + item["TITLE"] + '</td><td>' + item["REGDATE"] + '</td><td>수정, 삭제</td></tr>');
            });

            //콤마제거
            //콤마추가
            //숫자변환 -> 숫자인지 체크하는것도 포함 , 숫자인경우 숫자 parseint , 문자인경우 0 , null 0, NaN 0 
            //
           

            //function stringformat()
            //comm.stringformat
        },
        search: function () {
            this.searchvalue = $("#input[name=search]").val();
            this.searchcolum = $("#input[name=searchcolum]").val();
            this.init();
        }
        //prepage: function () {
        //    //다음에
        //    return (pagesize - nowpage)
        //},
        //nextpage: function () {
        //    let nextpage = (pagesize - nowpage) + 1
        //    getlist(nextpage);
        //}
    };

</script>

<!--전체 콘텐츠-->
<div>
    <!--상단 콘텐츠-->
    <div>
        <!--게시물 갯수 표시-->
        <div id="board_count">
            총 <span>10</span>건의 게시물
        </div>
        <!--게시물 검색-->
        <div>
            <!--드롭다운-->
            <div class="dropdown">
                <span class="dropbtn">검색 기준</span>
                <div class="dropdown-content">
                    <div>제목</div>
                    <div>본문</div>
                </div>
            </div>
            <!--입력창-->
            <!--버튼-->
        </div>
    </div>
    <!--중앙 콘텐츠-->
    <div>
        <!--게시물 테이블-->
        <div>
            <table id="board">
                <thead>
                    <tr>
                        <th>번호</th>
                        <th>제목</th>
                        <th>작성일</th>
                        <th>.</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <th>1</th>
                        <td>Mark</td>
                        <td>Otto</td>
                        <td>Otto</td>
                    </tr>
                    <tr>
                        <th>1</th>
                        <td>Mark</td>
                        <td>Otto</td>
                        <td>Otto</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
    <!--하단 콘텐츠-->
    <div>
        <!--페이지 버튼-->
        <div>
            <div></div>
        </div>
        <!--등록 버튼-->

    </div>
</div>